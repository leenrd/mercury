"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/overview/page",{

/***/ "(app-pages-browser)/./src/lib/chart.util.ts":
/*!*******************************!*\
  !*** ./src/lib/chart.util.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AvailableChartColors: function() { return /* binding */ AvailableChartColors; },\n/* harmony export */   chartColors: function() { return /* binding */ chartColors; },\n/* harmony export */   constructCategoryColors: function() { return /* binding */ constructCategoryColors; },\n/* harmony export */   getColorClassName: function() { return /* binding */ getColorClassName; },\n/* harmony export */   getYAxisDomain: function() { return /* binding */ getYAxisDomain; }\n/* harmony export */ });\n// Tremor chartColors [v0.1.0]\nconst chartColors = {\n    blue: {\n        bg: \"bg-blue-500\",\n        stroke: \"stroke-blue-500\",\n        fill: \"fill-blue-500\",\n        text: \"text-blue-500\"\n    },\n    emerald: {\n        bg: \"bg-emerald-500\",\n        stroke: \"stroke-emerald-500\",\n        fill: \"fill-emerald-500\",\n        text: \"text-emerald-500\"\n    },\n    violet: {\n        bg: \"bg-violet-500\",\n        stroke: \"stroke-violet-500\",\n        fill: \"fill-violet-500\",\n        text: \"text-violet-500\"\n    },\n    amber: {\n        bg: \"bg-amber-500\",\n        stroke: \"stroke-amber-500\",\n        fill: \"fill-amber-500\",\n        text: \"text-amber-500\"\n    },\n    gray: {\n        bg: \"bg-gray-500\",\n        stroke: \"stroke-gray-500\",\n        fill: \"fill-gray-500\",\n        text: \"text-gray-500\"\n    },\n    cyan: {\n        bg: \"bg-cyan-500\",\n        stroke: \"stroke-cyan-500\",\n        fill: \"fill-cyan-500\",\n        text: \"text-cyan-500\"\n    },\n    pink: {\n        bg: \"bg-pink-500\",\n        stroke: \"stroke-pink-500\",\n        fill: \"fill-pink-500\",\n        text: \"text-pink-500\"\n    },\n    lime: {\n        bg: \"bg-lime-500\",\n        stroke: \"stroke-lime-500\",\n        fill: \"fill-lime-500\",\n        text: \"text-lime-500\"\n    },\n    fuchsia: {\n        bg: \"bg-fuchsia-500\",\n        stroke: \"stroke-fuchsia-500\",\n        fill: \"fill-fuchsia-500\",\n        text: \"text-fuchsia-500\"\n    }\n};\nconst AvailableChartColors = Object.keys(chartColors);\nconst constructCategoryColors = (categories, colors)=>{\n    const categoryColors = new Map();\n    categories.forEach((category, index)=>{\n        categoryColors.set(category, colors[index % colors.length]);\n    });\n    return categoryColors;\n};\nconst getColorClassName = (color, type)=>{\n    var _chartColors_color;\n    const fallbackColor = {\n        bg: \"bg-gray-500\",\n        stroke: \"stroke-gray-500\",\n        fill: \"fill-gray-500\",\n        text: \"text-gray-500\"\n    };\n    var _chartColors_color_type;\n    return (_chartColors_color_type = (_chartColors_color = chartColors[color]) === null || _chartColors_color === void 0 ? void 0 : _chartColors_color[type]) !== null && _chartColors_color_type !== void 0 ? _chartColors_color_type : fallbackColor[type];\n};\n// Tremor getYAxisDomain [v0.0.0]\nconst getYAxisDomain = (autoMinValue, minValue, maxValue)=>{\n    const minDomain = autoMinValue ? \"auto\" : minValue !== null && minValue !== void 0 ? minValue : 0;\n    const maxDomain = maxValue !== null && maxValue !== void 0 ? maxValue : \"auto\";\n    return [\n        minDomain,\n        maxDomain\n    ];\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvY2hhcnQudXRpbC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLDhCQUE4QjtBQUl2QixNQUFNQSxjQUFjO0lBQ3pCQyxNQUFNO1FBQ0pDLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBQyxTQUFTO1FBQ1BKLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBRSxRQUFRO1FBQ05MLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBRyxPQUFPO1FBQ0xOLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBSSxNQUFNO1FBQ0pQLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBSyxNQUFNO1FBQ0pSLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBTSxNQUFNO1FBQ0pULElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBTyxNQUFNO1FBQ0pWLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtJQUNBUSxTQUFTO1FBQ1BYLElBQUk7UUFDSkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLE1BQU07SUFDUjtBQUNGLEVBSUU7QUFJSyxNQUFNUyx1QkFBbURDLE9BQU9DLElBQUksQ0FDekVoQixhQUNtQztBQUU5QixNQUFNaUIsMEJBQTBCLENBQ3JDQyxZQUNBQztJQUVBLE1BQU1DLGlCQUFpQixJQUFJQztJQUMzQkgsV0FBV0ksT0FBTyxDQUFDLENBQUNDLFVBQVVDO1FBQzVCSixlQUFlSyxHQUFHLENBQUNGLFVBQVVKLE1BQU0sQ0FBQ0ssUUFBUUwsT0FBT08sTUFBTSxDQUFDO0lBQzVEO0lBQ0EsT0FBT047QUFDVCxFQUFFO0FBRUssTUFBTU8sb0JBQW9CLENBQy9CQyxPQUNBQztRQVFPN0I7SUFOUCxNQUFNOEIsZ0JBQWdCO1FBQ3BCNUIsSUFBSTtRQUNKQyxRQUFRO1FBQ1JDLE1BQU07UUFDTkMsTUFBTTtJQUNSO1FBQ09MO0lBQVAsT0FBT0EsQ0FBQUEsMkJBQUFBLHFCQUFBQSxXQUFXLENBQUM0QixNQUFNLGNBQWxCNUIseUNBQUFBLGtCQUFvQixDQUFDNkIsS0FBSyxjQUExQjdCLHFDQUFBQSwwQkFBOEI4QixhQUFhLENBQUNELEtBQUs7QUFDMUQsRUFBRTtBQUVGLGlDQUFpQztBQUUxQixNQUFNRSxpQkFBaUIsQ0FDNUJDLGNBQ0FDLFVBQ0FDO0lBRUEsTUFBTUMsWUFBWUgsZUFBZSxTQUFTQyxxQkFBQUEsc0JBQUFBLFdBQVk7SUFDdEQsTUFBTUcsWUFBWUYscUJBQUFBLHNCQUFBQSxXQUFZO0lBQzlCLE9BQU87UUFBQ0M7UUFBV0M7S0FBVTtBQUMvQixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvY2hhcnQudXRpbC50cz8zM2Q3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRyZW1vciBjaGFydENvbG9ycyBbdjAuMS4wXVxyXG5cclxuZXhwb3J0IHR5cGUgQ29sb3JVdGlsaXR5ID0gXCJiZ1wiIHwgXCJzdHJva2VcIiB8IFwiZmlsbFwiIHwgXCJ0ZXh0XCI7XHJcblxyXG5leHBvcnQgY29uc3QgY2hhcnRDb2xvcnMgPSB7XHJcbiAgYmx1ZToge1xyXG4gICAgYmc6IFwiYmctYmx1ZS01MDBcIixcclxuICAgIHN0cm9rZTogXCJzdHJva2UtYmx1ZS01MDBcIixcclxuICAgIGZpbGw6IFwiZmlsbC1ibHVlLTUwMFwiLFxyXG4gICAgdGV4dDogXCJ0ZXh0LWJsdWUtNTAwXCIsXHJcbiAgfSxcclxuICBlbWVyYWxkOiB7XHJcbiAgICBiZzogXCJiZy1lbWVyYWxkLTUwMFwiLFxyXG4gICAgc3Ryb2tlOiBcInN0cm9rZS1lbWVyYWxkLTUwMFwiLFxyXG4gICAgZmlsbDogXCJmaWxsLWVtZXJhbGQtNTAwXCIsXHJcbiAgICB0ZXh0OiBcInRleHQtZW1lcmFsZC01MDBcIixcclxuICB9LFxyXG4gIHZpb2xldDoge1xyXG4gICAgYmc6IFwiYmctdmlvbGV0LTUwMFwiLFxyXG4gICAgc3Ryb2tlOiBcInN0cm9rZS12aW9sZXQtNTAwXCIsXHJcbiAgICBmaWxsOiBcImZpbGwtdmlvbGV0LTUwMFwiLFxyXG4gICAgdGV4dDogXCJ0ZXh0LXZpb2xldC01MDBcIixcclxuICB9LFxyXG4gIGFtYmVyOiB7XHJcbiAgICBiZzogXCJiZy1hbWJlci01MDBcIixcclxuICAgIHN0cm9rZTogXCJzdHJva2UtYW1iZXItNTAwXCIsXHJcbiAgICBmaWxsOiBcImZpbGwtYW1iZXItNTAwXCIsXHJcbiAgICB0ZXh0OiBcInRleHQtYW1iZXItNTAwXCIsXHJcbiAgfSxcclxuICBncmF5OiB7XHJcbiAgICBiZzogXCJiZy1ncmF5LTUwMFwiLFxyXG4gICAgc3Ryb2tlOiBcInN0cm9rZS1ncmF5LTUwMFwiLFxyXG4gICAgZmlsbDogXCJmaWxsLWdyYXktNTAwXCIsXHJcbiAgICB0ZXh0OiBcInRleHQtZ3JheS01MDBcIixcclxuICB9LFxyXG4gIGN5YW46IHtcclxuICAgIGJnOiBcImJnLWN5YW4tNTAwXCIsXHJcbiAgICBzdHJva2U6IFwic3Ryb2tlLWN5YW4tNTAwXCIsXHJcbiAgICBmaWxsOiBcImZpbGwtY3lhbi01MDBcIixcclxuICAgIHRleHQ6IFwidGV4dC1jeWFuLTUwMFwiLFxyXG4gIH0sXHJcbiAgcGluazoge1xyXG4gICAgYmc6IFwiYmctcGluay01MDBcIixcclxuICAgIHN0cm9rZTogXCJzdHJva2UtcGluay01MDBcIixcclxuICAgIGZpbGw6IFwiZmlsbC1waW5rLTUwMFwiLFxyXG4gICAgdGV4dDogXCJ0ZXh0LXBpbmstNTAwXCIsXHJcbiAgfSxcclxuICBsaW1lOiB7XHJcbiAgICBiZzogXCJiZy1saW1lLTUwMFwiLFxyXG4gICAgc3Ryb2tlOiBcInN0cm9rZS1saW1lLTUwMFwiLFxyXG4gICAgZmlsbDogXCJmaWxsLWxpbWUtNTAwXCIsXHJcbiAgICB0ZXh0OiBcInRleHQtbGltZS01MDBcIixcclxuICB9LFxyXG4gIGZ1Y2hzaWE6IHtcclxuICAgIGJnOiBcImJnLWZ1Y2hzaWEtNTAwXCIsXHJcbiAgICBzdHJva2U6IFwic3Ryb2tlLWZ1Y2hzaWEtNTAwXCIsXHJcbiAgICBmaWxsOiBcImZpbGwtZnVjaHNpYS01MDBcIixcclxuICAgIHRleHQ6IFwidGV4dC1mdWNoc2lhLTUwMFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Qgc2F0aXNmaWVzIHtcclxuICBbY29sb3I6IHN0cmluZ106IHtcclxuICAgIFtrZXkgaW4gQ29sb3JVdGlsaXR5XTogc3RyaW5nO1xyXG4gIH07XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBBdmFpbGFibGVDaGFydENvbG9yc0tleXMgPSBrZXlvZiB0eXBlb2YgY2hhcnRDb2xvcnM7XHJcblxyXG5leHBvcnQgY29uc3QgQXZhaWxhYmxlQ2hhcnRDb2xvcnM6IEF2YWlsYWJsZUNoYXJ0Q29sb3JzS2V5c1tdID0gT2JqZWN0LmtleXMoXHJcbiAgY2hhcnRDb2xvcnNcclxuKSBhcyBBcnJheTxBdmFpbGFibGVDaGFydENvbG9yc0tleXM+O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbnN0cnVjdENhdGVnb3J5Q29sb3JzID0gKFxyXG4gIGNhdGVnb3JpZXM6IHN0cmluZ1tdLFxyXG4gIGNvbG9yczogQXZhaWxhYmxlQ2hhcnRDb2xvcnNLZXlzW11cclxuKTogTWFwPHN0cmluZywgQXZhaWxhYmxlQ2hhcnRDb2xvcnNLZXlzPiA9PiB7XHJcbiAgY29uc3QgY2F0ZWdvcnlDb2xvcnMgPSBuZXcgTWFwPHN0cmluZywgQXZhaWxhYmxlQ2hhcnRDb2xvcnNLZXlzPigpO1xyXG4gIGNhdGVnb3JpZXMuZm9yRWFjaCgoY2F0ZWdvcnksIGluZGV4KSA9PiB7XHJcbiAgICBjYXRlZ29yeUNvbG9ycy5zZXQoY2F0ZWdvcnksIGNvbG9yc1tpbmRleCAlIGNvbG9ycy5sZW5ndGhdKTtcclxuICB9KTtcclxuICByZXR1cm4gY2F0ZWdvcnlDb2xvcnM7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q29sb3JDbGFzc05hbWUgPSAoXHJcbiAgY29sb3I6IEF2YWlsYWJsZUNoYXJ0Q29sb3JzS2V5cyxcclxuICB0eXBlOiBDb2xvclV0aWxpdHlcclxuKTogc3RyaW5nID0+IHtcclxuICBjb25zdCBmYWxsYmFja0NvbG9yID0ge1xyXG4gICAgYmc6IFwiYmctZ3JheS01MDBcIixcclxuICAgIHN0cm9rZTogXCJzdHJva2UtZ3JheS01MDBcIixcclxuICAgIGZpbGw6IFwiZmlsbC1ncmF5LTUwMFwiLFxyXG4gICAgdGV4dDogXCJ0ZXh0LWdyYXktNTAwXCIsXHJcbiAgfTtcclxuICByZXR1cm4gY2hhcnRDb2xvcnNbY29sb3JdPy5bdHlwZV0gPz8gZmFsbGJhY2tDb2xvclt0eXBlXTtcclxufTtcclxuXHJcbi8vIFRyZW1vciBnZXRZQXhpc0RvbWFpbiBbdjAuMC4wXVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFlBeGlzRG9tYWluID0gKFxyXG4gIGF1dG9NaW5WYWx1ZTogYm9vbGVhbixcclxuICBtaW5WYWx1ZTogbnVtYmVyIHwgdW5kZWZpbmVkLFxyXG4gIG1heFZhbHVlOiBudW1iZXIgfCB1bmRlZmluZWRcclxuKSA9PiB7XHJcbiAgY29uc3QgbWluRG9tYWluID0gYXV0b01pblZhbHVlID8gXCJhdXRvXCIgOiBtaW5WYWx1ZSA/PyAwO1xyXG4gIGNvbnN0IG1heERvbWFpbiA9IG1heFZhbHVlID8/IFwiYXV0b1wiO1xyXG4gIHJldHVybiBbbWluRG9tYWluLCBtYXhEb21haW5dO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiY2hhcnRDb2xvcnMiLCJibHVlIiwiYmciLCJzdHJva2UiLCJmaWxsIiwidGV4dCIsImVtZXJhbGQiLCJ2aW9sZXQiLCJhbWJlciIsImdyYXkiLCJjeWFuIiwicGluayIsImxpbWUiLCJmdWNoc2lhIiwiQXZhaWxhYmxlQ2hhcnRDb2xvcnMiLCJPYmplY3QiLCJrZXlzIiwiY29uc3RydWN0Q2F0ZWdvcnlDb2xvcnMiLCJjYXRlZ29yaWVzIiwiY29sb3JzIiwiY2F0ZWdvcnlDb2xvcnMiLCJNYXAiLCJmb3JFYWNoIiwiY2F0ZWdvcnkiLCJpbmRleCIsInNldCIsImxlbmd0aCIsImdldENvbG9yQ2xhc3NOYW1lIiwiY29sb3IiLCJ0eXBlIiwiZmFsbGJhY2tDb2xvciIsImdldFlBeGlzRG9tYWluIiwiYXV0b01pblZhbHVlIiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm1pbkRvbWFpbiIsIm1heERvbWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/chart.util.ts\n"));

/***/ })

});