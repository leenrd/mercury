// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  username  String      @unique
  password  String
  watchlist Watchlist[]
  portfolio Portfolio[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
}

model Asset {
  id            String    @id @default(cuid())
  label         String
  type          String
  quantity      Float
  portfolio     Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId   String
  purchasePrice Int
  purchaseDate  DateTime  @default(now())
  createdAt     DateTime  @default(now())
}

model Liability {
  id            String    @id @default(cuid())
  label         String
  type          String
  quantity      Float
  portfolio     Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId   String
  purchasePrice Int
  purchaseDate  DateTime  @default(now())
  createdAt     DateTime  @default(now())
}

model Transaction {
  id        String   @id @default(cuid())
  merchant  String
  amount    Float
  category  String
  account   Account  @relation("transaction", fields: [accountId], references: [id])
  accountId String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
}

model Account {
  id           String        @id @default(cuid())
  label        String
  type         String
  provider     String
  value        Float
  createdAt    DateTime      @default(now())
  transactions Transaction[] @relation("transaction")
}

model Watchlist {
  id        String   @id @default(cuid())
  label     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Portfolio {
  id          String      @id @default(cuid())
  label       String
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  assets      Asset[]
  liabilities Liability[]
  createdAt   DateTime    @default(now())
}
